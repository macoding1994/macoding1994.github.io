{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"Networking%20%26%20Security/Firewalld/","title":"Firewall-cmd","text":""},{"location":"Networking%20%26%20Security/Firewalld/#list-default-zone-all-zones","title":"List Default Zone &amp; All Zones","text":"<pre><code>firewall-cmd --list-all\nfirewall-cmd --list-all-zones\n</code></pre>"},{"location":"Networking%20%26%20Security/Firewalld/#list-ports","title":"List Ports","text":"<pre><code>firewall-cmd --list-ports\n</code></pre>"},{"location":"Networking%20%26%20Security/Firewalld/#addremove-ports","title":"Add/Remove Ports","text":"<p>To open TCP port 2222:</p> <pre><code>firewall-cmd --add-port=2222/tcp\n</code></pre> <p>To close TCP port 2222:</p> <pre><code>firewall-cmd --remove-port=2222/tcp\n</code></pre>"},{"location":"Networking%20%26%20Security/Firewalld/#add-port-permanent","title":"Add Port Permanent","text":"<p>To open TCP port 2222 that will stay in the config after the a reload:</p> <pre><code>firewall-cmd --add-port=2222/tcp --permanent\n</code></pre>"},{"location":"Networking%20%26%20Security/Firewalld/#reload","title":"Reload","text":"<pre><code>firewall-cmd --reload\n</code></pre>"},{"location":"Networking%20%26%20Security/Firewalld/#stopstart-service","title":"Stop/Start Service","text":"<pre><code>systemctl start firewalld.service\nsystemctl stop firewalld.service\n</code></pre>"},{"location":"Networking%20%26%20Security/General/","title":"General Linux Commands","text":""},{"location":"Networking%20%26%20Security/General/#view-terminal-history","title":"View Terminal History","text":"<pre><code>history\n</code></pre>"},{"location":"Networking%20%26%20Security/General/#view-file-permissions","title":"View file permissions","text":"<pre><code>ls -l\n</code></pre>"},{"location":"Networking%20%26%20Security/General/#remove-packages-that-used-to-be-dependencies-debian","title":"Remove Packages that used to be Dependencies (Debian)","text":"<pre><code>apt autoremove\n</code></pre>"},{"location":"Networking%20%26%20Security/General/#find-packages-that-include-a-certain-package-centos","title":"Find Packages that Include a Certain Package (CentOS)","text":"<pre><code>yum provides PACKAGE_NAME\n</code></pre>"},{"location":"Networking%20%26%20Security/General/#view-sudo-rights-for-current-user","title":"View sudo rights for current user","text":"<pre><code>sudo -l\n</code></pre>"},{"location":"Networking%20%26%20Security/Host%20Files/","title":"Host Files","text":"<p>Before doing a DNS request, your system will check your hosts file to see if you there is an IP associated with that hostname. If there is, then no DNS request will be performed.</p>"},{"location":"Networking%20%26%20Security/Host%20Files/#host-file-locations","title":"Host File Locations","text":""},{"location":"Networking%20%26%20Security/Host%20Files/#windows","title":"Windows","text":"<pre><code>C:\\Windows\\System32\\drivers\\etc\\hosts\n</code></pre>"},{"location":"Networking%20%26%20Security/Host%20Files/#linux","title":"Linux","text":"<pre><code>/etc/hosts\n</code></pre>"},{"location":"Networking%20%26%20Security/Netcat/","title":"Using Netcat","text":""},{"location":"Networking%20%26%20Security/Netcat/#listen-for-connections","title":"Listen for Connections","text":"<pre><code>nc -lvp PORT_NUMBER\n</code></pre> <ul> <li>TCP is default. Add a <code>-u</code> flag for UDP connections.</li> <li><code>l</code> is for listen mode, the computer will wait for a connection rather then making one.</li> <li><code>v</code> if for verbose mode.</li> <li><code>p</code> is to specify a port number.</li> <li>You can test this is working by going to your web browser and entering this in the URL bar: <code>COMPUTER_IP:PORT_NUMBER</code></li> </ul>"},{"location":"Networking%20%26%20Security/Netcat/#send-file-from-host-to-host","title":"Send File From Host to Host","text":"<ul> <li>File transfer using netcat are <code>NOT</code> encrypted, use only on trusted networks.</li> </ul>"},{"location":"Networking%20%26%20Security/Netcat/#sender","title":"Sender","text":"<pre><code>nc -v -w 3 COMPUTER_IP PORT_NUMBER &lt; INPUT_FILE\n</code></pre> <ul> <li><code>-w 3</code> means wait set the connection timeout to 3 seconds.</li> </ul>"},{"location":"Networking%20%26%20Security/Netcat/#receiver","title":"Receiver","text":"<pre><code>nc -lvp PORT_NUMBER &gt; OUTPUT_FILE\n</code></pre>"},{"location":"Networking%20%26%20Security/Netcat/#test-for-plaintext-smtp-login","title":"Test for Plaintext SMTP Login","text":"<pre><code>nc -nv SERVER_IP PORT_NUMBER\nEHLO HOSTNAME\n</code></pre> <ul> <li><code>-n</code> is for no DNS resolution.</li> <li><code>EHLO</code> is if the server is ESMTP. Standard SMTP should use <code>HELO</code> prefix. </li> </ul>"},{"location":"Networking%20%26%20Security/Networking/","title":"Linux Networking","text":""},{"location":"Networking%20%26%20Security/Networking/#network-interfaces","title":"Network Interfaces","text":"<ul> <li>View Network Interfaces</li> </ul> <pre><code>ip a\n</code></pre> <ul> <li>View Detailed Interface Data</li> </ul> <pre><code>ip a list [INTERFACE]\n</code></pre> <ul> <li>Example</li> </ul> <pre><code>ip a list eth0\n</code></pre> <ul> <li>View Interface State</li> </ul> <pre><code>ip link\n</code></pre> <ul> <li>Change Interface State</li> </ul> <pre><code>ip link set dev [INTERFACE] up/down\n</code></pre> <ul> <li>Example</li> </ul> <pre><code>ip link set dev eth0 down\n</code></pre>"},{"location":"Networking%20%26%20Security/Networking/#assign-ip-address-to-an-interface","title":"Assign IP Address to an Interface","text":"<ul> <li>Assign IP</li> </ul> <pre><code>ip a add [ADDRESS/MASK] dev [INTERFACE]\n</code></pre> <ul> <li>Example</li> </ul> <pre><code>ip a add 192.168.1.200/24 dev eth0\n</code></pre> <ul> <li>Delete assigned IP</li> </ul> <pre><code>ip a delete [ADDRESS/MASK] dev [INTERFACE]\n</code></pre>"},{"location":"Networking%20%26%20Security/Networking/#display-routing-table","title":"Display Routing Table","text":"<pre><code>ip route\n</code></pre>"},{"location":"Networking%20%26%20Security/Networking/#settiing-up-static-network-credentials","title":"Settiing up Static Network Credentials","text":"<ul> <li>Open the file /etc/network/interfaces</li> <li>Add the following</li> </ul> <pre><code>adddress 192.168.2.19\nnetmask 255.255.255.0\nnetwork 192.168.2.0\nbroadcast 192.168.2.255\n</code></pre> <ul> <li>In the terminal, run the following:</li> </ul> <pre><code>ip route add 192.168.2.0/24 dev eth0\nroute add default gateway 192.168.2.1 eth0\n</code></pre>"},{"location":"Networking%20%26%20Security/Networking/#forwarding-using-ip-tables","title":"Forwarding Using IP Tables","text":"<ul> <li>List all the rules for the selected chain. If no chain is giving, all are shown</li> </ul> <pre><code>iptables -L\n</code></pre> <ul> <li>Display the chains for the NAT table</li> </ul> <pre><code>iptables -t nat -L \n</code></pre> <ul> <li>Flush the NAT table and remove all routing commands</li> </ul> <pre><code>iptables -t nat -L -flush\n</code></pre> <ul> <li>Create a new route to forward traffic</li> </ul> <pre><code>iptables -t [TABLE_NAME] -A [CHAIN_NAME] -p [PROTOCOL] -destination-port [DST_PORT] -j [EXTENSION] -to-port [TO_PORT]\n</code></pre> <ul> <li><code>-t</code> specifies which table to add the rule to</li> <li><code>-A</code> specifies which chain in the table the rule is to be added to</li> <li><code>-p</code> specifies which protocol to use</li> <li><code>-destination-port</code> is the port the pakcet is heading to</li> <li><code>-j</code> specifies what to do with the packet when it's received (e.g. REDIRECT, REJECT)</li> <li> <p><code>-to-port</code> specifies what port we should forward the packet on </p> </li> <li> <p>Example route to FORWARD incoming traffic</p> </li> </ul> <pre><code>iptables -t nat -A PREROUTING -p tcp -destination-port 80 -j REDIRECT -to-port 10000\n</code></pre>"},{"location":"Networking%20%26%20Security/Networking/#arp-table","title":"ARP Table","text":"<ul> <li>View ARP Table</li> </ul> <pre><code>ip n\n</code></pre> <ul> <li>Add a new entry</li> </ul> <pre><code>ip n add [IP_ADDRESS] lladdr [MAC] dev [INTERFACE] nud perm\n</code></pre> <ul> <li>Example</li> </ul> <pre><code>ip n add 192.168.0.5 lladdr 00:1a:30:38:a8:00 dev eth0 nud perm\n</code></pre> <ul> <li>Delete an entry</li> </ul> <pre><code>ip n delete [IP_ADDRESS] dev [INTERFACE]\n</code></pre> <ul> <li>Example</li> </ul> <pre><code>ip n delete 192.168.0.5 dev eth0\n</code></pre>"},{"location":"Networking%20%26%20Security/Networking/#arp-cache-poisoning-using-ettercap","title":"ARP Cache Poisoning using Ettercap:","text":"<ul> <li>Launch the program will all network hosts as a target</li> </ul> <pre><code>ettercap -Tq ///\n</code></pre> <ul> <li>Target a specific host</li> </ul> <pre><code>ettercap -Tq -M arp:remote -i [INTERFACE] -S [TARGET1] [TARGET2]\n</code></pre> <pre><code> - `-Tq` means text mode and quiet mode\n - `-M` means we are using MITM mode\n - `arp:remote` means we are poisoning a remote ARP cache\n - `-i` means we are specifying the interface on which we are connected to the target\n - `-S` means don't try and forge SSL certificates and present them to the victim\n - NOTE: Look at the man/help page for how the target addresses should be formatted\n</code></pre> <ul> <li>Activate a pluggin once the program is running<ul> <li>Press <code>P</code></li> <li>Type the pluggin name and press <code>ENTER</code></li> <li>E.g. <code>autoadd</code>. This pluggin automatically poisons new hosts when they join the network </li> </ul> </li> </ul>"},{"location":"Networking%20%26%20Security/SSH%20%26%20Port%20Forwarding/","title":"SSH &amp; Port Forwarding","text":""},{"location":"Networking%20%26%20Security/SSH%20%26%20Port%20Forwarding/#basic-ssh","title":"Basic SSH","text":""},{"location":"Networking%20%26%20Security/SSH%20%26%20Port%20Forwarding/#connect-to-host","title":"Connect to Host","text":"<pre><code>ssh USER@HOST_IP -p 2222\n</code></pre> <ul> <li><code>-p</code> to specify the port (22 is default) </li> </ul>"},{"location":"Networking%20%26%20Security/SSH%20%26%20Port%20Forwarding/#connect-to-host-with-private-key","title":"Connect to Host with Private Key","text":"<pre><code>ssh -i PRIVATE_KEY USER@HOST_IP\n</code></pre>"},{"location":"Networking%20%26%20Security/SSH%20%26%20Port%20Forwarding/#copy-files-to-host","title":"Copy file(s) to Host","text":"<pre><code>scp local_file.txt USER@HOST_IP:/tmp/remote_file.txt\n</code></pre> <pre><code>scp FILE1 FILE2 USER@HOST_IP:/home/USER/\n</code></pre> <ul> <li>The <code>:</code> is how the <code>scp</code> command differentiates between local and remote locations.</li> </ul>"},{"location":"Networking%20%26%20Security/SSH%20%26%20Port%20Forwarding/#copy-file-from-host","title":"Copy file from Host","text":"<pre><code>scp USER@HOST_IP:/tmp/remote_file.txt local_file.txt \n</code></pre>"},{"location":"Networking%20%26%20Security/SSH%20%26%20Port%20Forwarding/#local-ssh-port-forward","title":"Local SSH Port Forward","text":"<p>Let's say the remote host is listening on <code>localhost:3000</code> and you want to connect to it from your local computer. Perhaps it's a database listening on localhost and you don't want it exposed to the network/internet.</p> <p>Using a Local Port Forward we can setup a listener on our local computer, which when we connect to will go through the SSH tunnel to the listener on the remote host.</p> <p>Here is the command that will allow us to do that:</p> <pre><code>ssh -L 1337:localhost:3000 USER@REMOTE_HOST_IP\n</code></pre> <p>This command will setup a listener on your local machine on <code>localhost:1337</code>. Connecting to this will be the same as if you connected to <code>localhost:3000</code> on the remote host.</p> <p></p>"},{"location":"Networking%20%26%20Security/SSH%20%26%20Port%20Forwarding/#remote-ssh-port-forward","title":"Remote SSH Port Forward","text":"<p>Let's say you have an application listening on <code>localhost:9595</code> on your local computer and your friend wants to connect to your server. However, both you and your friend networks are behind NAT (i.e.two home networks anywhere in the world) so you can't directly connect to each other.</p> <p>On your computer:</p> <pre><code>ssh -R 9000:localhost:9595 USER@REMOTE_HOST_IP\n</code></pre> <p>This command will setup a listener on the remote host on <code>localhost:9000</code>. Connecting to the remote host on <code>localhost:9000</code> will be the same as if you connected to <code>localhost:9595</code> on your local machine.</p> <p>This situation is now the same as a Local Port Forward. The remote host is now listening on <code>localhost:9000</code>. Your friend can now create a new listener on their computer using a Local Port Forward.</p> <p>On your friends computer:</p> <pre><code>ssh -L 1337:localhost:9000 USER@REMOTE_HOST_IP\n</code></pre> <p></p>"},{"location":"Networking%20%26%20Security/SSH%20%26%20Port%20Forwarding/#remote-ssh-port-forward-rdp-example","title":"Remote SSH Port Forward (RDP Example)","text":"<p>Let's say that you want your friend to RDP to your computer. However, you're both in home networks behind NAT.</p> <p>You can perform a remote port forward to a remote host and expose your RDP listener (0.0.0.0:3389 by default) to the internet. </p>"},{"location":"Networking%20%26%20Security/SSH%20%26%20Port%20Forwarding/#gateway-ports","title":"Gateway Ports","text":"<p>The goal is to setup a listener on the remote host on <code>0.0.0.0:3389</code>. However, when we do an SSH Port Forward, the default listener is on <code>127.0.0.1</code>. To change this and allow it to listen on all interfaces, we need to enabled the <code>GatewayPorts</code> options on the SSH Server.</p> <p></p> <p>On your computer:</p> <pre><code>ssh -R 3389:localhost:3389 USER@REMOTE_HOST_IP\n</code></pre> <p>Your friend can now RDP to connect directly to the remote host. The connection will then go through the SSH tunnel back to your machine.</p> <p>Ensure you have a decent password set before doing this as your PC will be exposed to the internet!</p>"},{"location":"Networking%20%26%20Security/SSH%20Server/","title":"SSH Server (Debian)","text":""},{"location":"Networking%20%26%20Security/SSH%20Server/#installing-ssh-server","title":"Installing SSH Server","text":"<pre><code>sudo apt install openssh-server\n</code></pre>"},{"location":"Networking%20%26%20Security/SSH%20Server/#configure-private-key-access-only","title":"Configure Private Key Access ONLY","text":""},{"location":"Networking%20%26%20Security/SSH%20Server/#open-sshd-config","title":"Open SSHD Config","text":"<pre><code>sudo nano /etc/ssh/sshd_config\n</code></pre>"},{"location":"Networking%20%26%20Security/SSH%20Server/#uncomment-the-following-lines","title":"Uncomment the following Lines:","text":"<pre><code>Port 22\nListenAddress 0.0.0.0\n\nHostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\nHostKey /etc/ssh/ssh_host_ed25519_key\n\nPermitRootLogin prohibit-password\nStrictModes yes\n\nPubkeyAuthentication yes\n\nAuthorizedKeysFile      .ssh/authorized_keys\n\nHostbasedAuthentication no\nPasswordAuthentication yes\nPermitEmptyPasswords no\n</code></pre>"},{"location":"Networking%20%26%20Security/SSH%20Server/#ensure-that-these-options-are-changed","title":"Ensure that these options are changed","text":"<pre><code>PermitRootLogin no\n\nPubkeyAuthentication yes\n\nHostbasedAuthentication no\nPasswordAuthentication no\nPermitEmptyPasswords no\n</code></pre>"},{"location":"Networking%20%26%20Security/SSH%20Server/#restart-the-ssh-server","title":"Restart the SSH Server","text":""},{"location":"Networking%20%26%20Security/SSH%20Server/#restart-the-server","title":"Restart the server","text":"<pre><code>sudo systemctl restart sshd\n</code></pre>"},{"location":"Networking%20%26%20Security/SSH%20Server/#ensure-there-are-no-server-errors","title":"Ensure there are no server errors","text":"<pre><code>sudo systemctl status sshd\n</code></pre>"},{"location":"Networking%20%26%20Security/SSH%20Server/#generate-a-publicprivate-key-pair-using-one-of-the-following","title":"Generate a Public/Private Key Pair Using one of the Following","text":"<pre><code>ssh-keygen -t rsa -b 4096\nssh-keygen -t ecdsa -b 521\nssh-keygen -t ed25519\n</code></pre> <p><code>-t</code> means the type of key. <code>-b</code> means the bit size of the key. <code>-f</code> mean specify the file name (not needed in this case as we will be prompted for it).  </p> <p>Key Types:  - <code>rsa</code> - Rivest Shamir Adleman, 2048 or 4096 bits are recommended.  - <code>ecdsa</code> - Elliptic Curve Digital Signature Algorithm (better variant of DSA), supports 256, 384 and 521 bit keys.  - <code>ed25519</code> - An EdDSA signature scheme using SHA-512 and Curve25519.</p> <p>Once you run the command you will have a private key <code>FILE_NAME</code> and a public key <code>FILE_NAME.pub</code></p>"},{"location":"Networking%20%26%20Security/SSH%20Server/#add-the-public-key-to-servers-authorized-keys","title":"Add the Public Key to Server's Authorized Keys","text":"<p>If the directory <code>~/.ssh</code> and file <code>authorized_keys</code> isn't already created, create it:</p> <pre><code>cd ~\nmkdir .ssh\nnano .ssh/authorized_keys\n</code></pre> <p>Copy the contents of the Public Key file you just created and paste it on a new line of the <code>authorized_keys</code> file.</p>"},{"location":"Networking%20%26%20Security/SSH%20Server/#restart-the-ssh-server_1","title":"Restart the SSH Server","text":"<pre><code>sudo systemctl restart sshd\n</code></pre>"},{"location":"Networking%20%26%20Security/SSH%20Server/#ssh-into-your-host-on-linux","title":"SSH into your Host on Linux","text":"<p>You can use <code>localhost</code> as the IP address to test the key.</p> <pre><code>ssh -i PRIVATE_KEY_FILE USER@IP\n</code></pre> <p><code>-i</code> is the location of the private key file. <code>-p</code> is the port (22 is default).  </p>"},{"location":"Networking%20%26%20Security/SSH%20Server/#ssh-into-your-host-on-windows","title":"SSH into your Host on Windows","text":"<p>Putty doesn't like the format that the private key comes in from ssh-keygen. You can get around this by connecting to your host using the private key with a program called <code>WinSCP</code>. When you select the private key it will prompt you asking you if you want to save it in Putty format. Click yes. You can now use this new private key file to connect to your host via Putty on Windows.</p>"},{"location":"Networking%20%26%20Security/Using%20ADB/","title":"Using ADB","text":""},{"location":"Networking%20%26%20Security/Using%20ADB/#view-connected-devices","title":"View Connected Devices","text":"<pre><code>adb devices\n</code></pre>"},{"location":"Networking%20%26%20Security/Using%20ADB/#installs-the-package-located-at-cpackageapk-on-your-computer-on-your-device","title":"Installs the package located at C:\\package.apk on your computer on your device.","text":"<pre><code>adb install C:\\package.apk\n</code></pre>"},{"location":"Networking%20%26%20Security/Using%20ADB/#uninstall-a-package-from-your-device","title":"Uninstall a package from your Device","text":"<pre><code>adb uninstall package.name\n</code></pre> <ul> <li>For example, you'd use the name com.rovio.angrybirds to uninstall the Angry Birds app.</li> </ul>"},{"location":"Networking%20%26%20Security/Using%20ADB/#push-a-file-from-your-computer-to-your-device","title":"Push a file from your Computer to your Device","text":"<pre><code>adb push C:\\file /sdcard/file\n</code></pre> <ul> <li>For example, the command here pushes the file located at C:\\file on your computer to /sdcard/file on your device</li> </ul>"},{"location":"Networking%20%26%20Security/Using%20ADB/#pull-a-file-from-your-device-to-your-computer","title":"Pull a file from your Device to your Computer","text":"<pre><code>adb pull /sdcard/file C:\\file\n</code></pre> <ul> <li>Works like adb push, but in reverse.</li> </ul>"},{"location":"Networking%20%26%20Security/Using%20ADB/#view-your-android-devices-log","title":"View your Android Device\u2019s log","text":"<pre><code>adb logcat\n</code></pre> <ul> <li>Can be useful for debugging apps.</li> </ul>"},{"location":"Networking%20%26%20Security/Using%20ADB/#spawn-interactive-linux-command-line-shell-on-your-device","title":"Spawn interactive Linux command-line shell on your Device","text":"<pre><code>adb shell\n</code></pre>"},{"location":"Networking%20%26%20Security/Using%20ADB/#runs-a-specified-shell-command-on-your-device","title":"Runs a specified shell command on your Device","text":"<pre><code>adb shell command\n</code></pre>"},{"location":"Networking%20%26%20Security/Using%20Netsh/","title":"Using netsh","text":""},{"location":"Networking%20%26%20Security/Using%20Netsh/#show-cached-wifi-passwords","title":"Show Cached Wifi Passwords","text":"<pre><code>netsh wlan show profiles\n</code></pre>"},{"location":"Networking%20%26%20Security/Using%20Netsh/#show-connection-status-of-network-interfaces","title":"Show connection status of network interfaces","text":"<pre><code>netsh interface ipv4 show interfaces\n</code></pre>"},{"location":"Networking%20%26%20Security/Using%20Netsh/#show-ip-address-of-all-interfaces","title":"Show IP Address of all Interfaces","text":"<pre><code>netsh interface ipv4 show ipaddresses\n</code></pre>"},{"location":"Networking%20%26%20Security/Using%20Netsh/#show-information-for-all-interfaces-ip-gateway-subnet","title":"Show Information for All Interfaces (IP, Gateway, Subnet)","text":"<pre><code>netsh interfaces ipv4 show addresses\n</code></pre>"},{"location":"Networking%20%26%20Security/Using%20Netsh/#show-network-routing-table","title":"Show Network Routing Table","text":"<pre><code>netsh interface ipv4 show route\n</code></pre>"},{"location":"Networking%20%26%20Security/Using%20Netsh/#show-dns-servers-for-network-interfaces","title":"Show DNS Servers for Network Interfaces","text":"<pre><code>netsh interfaces ipv4 show dnsservers\n</code></pre>"},{"location":"Networking%20%26%20Security/Using%20Netsh/#show-cached-ips-of-known-hosts-on-all-interfaces","title":"Show Cached IPs of known Hosts on all Interfaces","text":"<pre><code>netsh interface ipv4 show neighbors\n</code></pre>"},{"location":"Networking%20%26%20Security/Using%20Netsh/#show-current-tcp-connection-listening-established","title":"Show Current TCP Connection (Listening &amp; Established)","text":"<pre><code>netsh interfaces ipv4 show tcpconnections\n</code></pre>"},{"location":"Networking%20%26%20Security/Using%20Netsh/#show-firewall-status","title":"Show Firewall Status","text":"<pre><code>netsh advfirewall show allprofiles\n</code></pre>"},{"location":"cybersecurity-portfolio/","title":"Index","text":""},{"location":"me/about_me/","title":"About Me","text":"<p>Hello! \ud83d\udc4b My name is MA SHANGJU, and I am currently pursuing a master's degree in Cybersecurity at the University of Malaya (UM). I have always been deeply passionate about technology, which has driven my academic and professional journey.</p> <p>Before starting my postgraduate studies, I worked as a Python backend developer, focusing on web development. During my career, I was responsible for designing and implementing scalable, secure, and efficient APIs for various web applications. This hands-on experience not only honed my programming and problem-solving skills but also sparked my interest in the security aspects of software development.</p> <p>My decision to transition into the field of cybersecurity was motivated by a desire to understand and tackle the growing challenges of securing digital infrastructures. As someone who has always been fascinated by how systems work, I am eager to explore vulnerabilities, develop defense mechanisms, and contribute to creating safer digital environments.</p> <p>In addition to my academic and professional pursuits, I am enthusiastic about: - Automating routine tasks using Python, particularly in network and security contexts. - Exploring penetration testing and vulnerability analysis through tools like Nmap, Metasploit, and Burp Suite. - Participating in Capture The Flag (CTF) competitions to challenge myself and refine my skills. - Staying updated with the latest trends in IT and cybersecurity by reading blogs, attending webinars, and experimenting with new tools.</p> <p>My ultimate goal is to combine my expertise in backend development and cybersecurity to build secure systems that not only function efficiently but also withstand modern cyber threats. I aspire to work on innovative projects that address real-world security challenges and make meaningful contributions to the field.</p> <p>Feel free to connect with me to discuss technology, cybersecurity, or potential collaborations!</p>"},{"location":"me/about_me/#certifications-and-training","title":"Certifications and Training","text":"<ul> <li> <p>Cisco Certified Network Associate (CCNA) Status: Currently enrolled in CCNA training. Overview: The CCNA certification validates knowledge and skills in network fundamentals, IP connectivity, security fundamentals, and more. </p> </li> <li> <p>Cybersecurity Certifications Status: No current certifications in the cybersecurity domain. Considerations: Exploring entry-level cybersecurity certifications to enhance industry knowledge and skills.</p> </li> <li> <p>GitHub: github.com/macoding1994</p> </li> <li>Email: 23110836@siswa.um.edu.my</li> </ul>"},{"location":"me/career_objective/","title":"Career Objective","text":"<p>Dedicated and aspiring cybersecurity professional with hands-on experience in web vulnerability assessment, network security, and automated security tools development. Proficient in building and deploying scalable security solutions, including web vulnerability scanners and automated network monitoring platforms. Skilled in leveraging technologies such as WEB, Docker, and cloud-based architectures to enhance security workflows and improve efficiency.</p> <p>Currently pursuing CCNA certification to deepen knowledge in networking fundamentals and strengthen expertise in secure system design and implementation. Passionate about identifying and mitigating vulnerabilities, automating security operations, and contributing to the development of comprehensive cybersecurity strategies.</p> <p>Eager to bring a proactive and solution-oriented mindset to a dynamic security-focused role, where I can apply my technical acumen and innovative approaches to protect digital assets, ensure compliance, and drive advancements in enterprise security frameworks. Committed to continuous learning and staying abreast of evolving cybersecurity trends and threats.</p>"},{"location":"me/learning_journey/","title":"Learning Journey","text":"<p>Reflecting on my cybersecurity journey so far:</p>"},{"location":"me/learning_journey/#what-ive-learned","title":"What I've Learned:","text":""},{"location":"me/learning_journey/#1-basic-networking-concepts","title":"1. Basic Networking Concepts","text":"<p>Developed a strong foundation in fundamental networking principles: - Network Architectures: LAN, WAN, and WLAN. - IP Addressing and Subnetting: Mastered addressing schemes and the OSI model. - TCP/IP Protocols: Gained a thorough understanding of protocols used in data communication.</p>"},{"location":"me/learning_journey/#2-router-and-switch-configuration","title":"2. Router and Switch Configuration","text":"<p>Gained hands-on experience configuring network devices for optimized performance: - Implemented VLANs, trunking, and inter-VLAN routing for network segmentation. - Configured static and dynamic routing protocols like RIP and OSPF. - Ensured security using access control lists (ACLs) and port security techniques.</p>"},{"location":"me/learning_journey/#3-gns3-and-packet-tracer","title":"3. GNS3 and Packet Tracer","text":"<p>Utilized network simulation tools for designing and troubleshooting networks: - Built and tested complex network topologies in GNS3 and Packet Tracer. - Simulated routing and switching protocols to deepen practical knowledge. - Practiced real-world scenarios to enhance problem-solving and troubleshooting skills.</p>"},{"location":"me/learning_journey/#4-network-scanning-with-nmap","title":"4. Network Scanning with Nmap","text":"<p>Learned to leverage Nmap for vulnerability assessment: - Conducted host discovery, port scanning, and service enumeration. - Identified open ports and running services to assess network security. - Explored the Nmap Scripting Engine (NSE) for advanced scan automation.</p>"},{"location":"me/learning_journey/#current-challenges","title":"Current Challenges:","text":"<ul> <li>Practical Penetration Testing: Limited hands-on experience with exploiting different vulnerability types.  </li> <li>Security Knowledge Depth: Current understanding of security concepts is still surface-level.  </li> <li>Incident Response: Need to gain experience in managing real-world security incidents.</li> </ul>"},{"location":"me/learning_journey/#plan-for-improvement","title":"Plan for Improvement:","text":""},{"location":"me/learning_journey/#1-expand-practical-experience","title":"1. Expand Practical Experience","text":"<ul> <li>Engage in real-world penetration testing labs (e.g., TryHackMe, Hack The Box).  </li> <li>Focus on exploiting a variety of vulnerabilities and documenting each process.</li> </ul>"},{"location":"me/learning_journey/#2-deepen-security-knowledge","title":"2. Deepen Security Knowledge","text":"<ul> <li>Enroll in comprehensive courses like OSCP to build expertise.  </li> <li>Study resources on advanced topics, including exploit development and reverse engineering.  </li> </ul>"},{"location":"me/learning_journey/#3-participate-in-community-activities","title":"3. Participate in Community Activities","text":"<ul> <li>Join Capture the Flag (CTF) competitions to sharpen technical skills.  </li> <li>Collaborate with cybersecurity communities to exchange knowledge and stay updated on trends.</li> </ul> <p>This structured journey provides a roadmap to overcome current challenges and achieve professional growth in the field of cybersecurity.</p>"},{"location":"me/project_experience/","title":"Project Experience","text":""},{"location":"me/project_experience/#1-web-vulnerability-scanner-development","title":"1. WEB Vulnerability Scanner Development","text":"<p>Project URL: https://sec.caih.com</p> <p>Description: Developed a comprehensive web vulnerability scanner to identify and mitigate security risks in web applications. The tool supports automated vulnerability detection and detailed reporting.</p> <p>Responsibilities: - Designed and developed the scanning engine to detect various web vulnerabilities, including SQL Injection, XSS, and CSRF. - Implemented a user-friendly web interface using Django, providing intuitive scan management and result visualization. - Utilized Redis for asynchronous task management and optimized scan execution with Celery. - Managed scan data storage and retrieval using MySQL for structured data and MongoDB for unstructured logs. - Containerized the application with Docker and orchestrated services using Docker Compose for seamless deployment. - Integrated real-time notification and reporting functionalities to ensure prompt vulnerability awareness.</p> <p>Technologies: - Django, Redis, MySQL, MongoDB - Docker, Docker Compose</p> <p>Impact: - Increased vulnerability detection accuracy by implementing advanced payload analysis and response validation. - Reduced manual testing efforts by 60%, saving significant time for the security team. - Successfully deployed the scanner to multiple environments, detecting and addressing critical vulnerabilities in client applications.</p>"},{"location":"me/project_experience/#2-netsec-auto-automated-network-security-platform","title":"2. NetSec-Auto: Automated Network Security Platform","text":"<p>Project URL: https://github.com/macoding1994/NetSec-Auto</p> <p>Description: Developed an automated network security platform designed to continuously monitor, detect threats, and generate customized reports, enhancing the security posture of enterprise networks.</p> <p>Responsibilities: - Engineered a comprehensive solution for real-time network monitoring and threat detection. - Implemented automated reporting mechanisms to provide actionable security insights. - Designed a user-friendly interface for seamless interaction with the platform. - Ensured scalability and adaptability to accommodate diverse network environments.</p> <p>Technologies: - Python, PyQt5 - Shodan API - Botpress</p> <p>Impact: - Enhanced network security through continuous monitoring and rapid threat detection. - Improved incident response times with automated, detailed reporting. - Provided a scalable solution adaptable to various organizational needs.</p> <p></p>"},{"location":"me/technical_skills/","title":"Technical Skills","text":"<p>As someone transitioning into the field of cybersecurity, I am building on my background as a Python backend developer and steadily expanding my knowledge in security concepts. Here are the skills I have acquired so far:</p>"},{"location":"me/technical_skills/#cybersecurity-skills","title":"Cybersecurity Skills","text":"<ul> <li>Network Protocols:</li> <li>Familiar with common network protocols, including TCP/IP, HTTP/HTTPS, DNS, and SMTP.</li> <li>Hands-on experience analyzing network traffic and understanding packet structures.</li> <li>Tools:</li> <li>Proficient with tools such as Packet Tracer and GNS3 for network simulation and troubleshooting.</li> <li>Experience using security and testing tools like Nmap, Masscan, Postman, and Burp Suite for reconnaissance, vulnerability scanning, and API testing.</li> </ul>"},{"location":"me/technical_skills/#development-skills","title":"Development Skills","text":"<ul> <li>Backend Development:</li> <li>Proficient in Python, with experience in frameworks like Django and Flask to build secure and efficient web applications.</li> <li>Familiar with database integration using PostgreSQL, MySQL, and MongoDB.</li> <li>GUI Development:</li> <li>Developed small GUI tools using Python libraries like Tkinter and PyQt to assist with tasks such as network asset identification and reporting.</li> <li>Code Security:</li> <li>Implemented secure coding practices during development to minimize vulnerabilities.</li> <li>Basic understanding of static and dynamic code analysis tools for improving software security.</li> </ul>"},{"location":"me/technical_skills/#programming-and-automation","title":"Programming and Automation","text":"<ul> <li>Proficient in writing Python scripts for automating tasks such as log analysis, network reconnaissance, and basic vulnerability scanning.</li> <li>Experience in developing tools to streamline routine IT and security processes.</li> </ul>"},{"location":"me/technical_skills/#additional-tools-and-platforms","title":"Additional Tools and Platforms","text":"<ul> <li>Operating Systems: Familiar with Linux (Ubuntu, CentOS) and Windows environments for development and security tasks.</li> <li>Containerization and Virtualization:</li> <li>Hands-on experience with Docker for containerizing applications and managing dependencies.</li> <li>Skilled in using VMware and VirtualBox for setting up virtual environments for testing and development.</li> <li>Version Control: Experienced with Git for managing and collaborating on projects.</li> </ul> <p>Although I am still at the beginning of my journey in cybersecurity, I am eager to continue learning and applying my knowledge to real-world challenges. My background in software development gives me a solid foundation, and I am excited to further explore the intersection of development and security.</p>"}]}